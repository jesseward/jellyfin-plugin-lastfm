name: Publish

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'The git tag to create a release for'
        required: true

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest

    steps:
    - name: Get tag name
      id: get_tag
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          TAG=${GITHUB_REF#refs/tags/}
        else
          TAG=${{ github.event.inputs.tag }}
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "GIT_TAG_NAME=$TAG" >> $GITHUB_ENV

    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_tag.outputs.tag }}

    - name: Checkout manifest build scripts repo.
      uses: actions/checkout@v2
      with:
        repository: jesseward/jellyfin-utilities
        path: manifest-tools

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build release via dotnet build...
      run: dotnet build Jellyfin.Plugin.Lastfm

    - name: Create ZIP archive of plugin release.
      run: zip "lastfm_${GIT_TAG_NAME}.zip" /home/runner/work/jellyfin-plugin-lastfm/jellyfin-plugin-lastfm/Jellyfin.Plugin.Lastfm/bin/Debug/net8.0/Jellyfin.Plugin.Lastfm.dll

    - uses: actions/setup-python@v2
      with:
        python-version: '3.13'

    - name: Fetch existing manifest from repo.
      run: curl -o manifest.json "https://jellyfin-repo.jesseward.com/manifest.json"

    - name: Update manifest with new version.
      run: CK=$(python manifest-tools/md5/md5.py -f "lastfm_${GIT_TAG_NAME}.zip") && python manifest-tools/manifest-generator/manifest.py -app LastFM -f manifest.json version -ver "${GIT_TAG_NAME}" -cl "Jellyfin LastFM build v${GIT_TAG_NAME}" -abi "10.10.0.0" -url "https://github.com/jesseward/jellyfin-plugin-lastfm/releases/download/${GIT_TAG_NAME}/lastfm_${GIT_TAG_NAME}.zip" -ck "${CK}" && cat manifest.json

    - name: Create github release and upload binaries.
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: "lastfm_${{ steps.get_tag.outputs.tag }}.zip"
        asset_name: "lastfm_${{ steps.get_tag.outputs.tag }}.zip"
        tag: ${{ steps.get_tag.outputs.tag }}
        overwrite: true
        body: "Jellyfin lastfm plugin release v${{ steps.get_tag.outputs.tag }}"

    - name: Upload manifest.json to remote Azure blob store.
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az storage blob upload -f manifest.json -n manifest.json --container-name "${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}" --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}"